PE="ompi*"
#PAR_RESOURCES="i_ib=true"

function parallel_exec {
	# Lets pick out the interconnect, so we can get rid of those pesky 
	# error messages at the beginning of our jobs

	if [ -z "$ORTE_PATH" ]; then
		echo "ORTE_PATH variable not set!"
		exit 1
	fi
		
	case "$PE" in
		ompi-tcp)	 	 	IC_OPTS="--mca btl ^mx,openib --mca mtl ^mx,psm" ;;
		ompi-sdr|ompi-ddr|ompi-svc*) 	IC_OPTS="--mca btl ^mx --mca mtl ^mx,psm" ;;
		ompi-psm)		 	IC_OPTS="--mca btl ^mx --mca mtl ^mx" ;;
		ompi-mx-env|ompi-mx-rcn) 	IC_OPTS="--mca btl ^openib --mca mtl ^mx,psm -x MX_RCACHE" ;;
	esac

	ORTE_COMMON="--prefix $ORTE_PATH $IC_OPTS"
	export MX_RCACHE=2

	if [ "$DEBUG" == "true" ]; then 
		ORTE_COMMON="$ORTE_COMMON --mca pls_gridengine_debug 1"
		ORTE_COMMON="$ORTE_COMMON --mca pls_gridengine_verbose 1"
		ORTE_COMMON="$ORTE_COMMON --mca ras_gridengine_debug 1"
		ORTE_COMMON="$ORTE_COMMON --mca ras_gridengine_verbose 1"
		ORTE_COMMON="$ORTE_COMMON --mca btl_openib_verbose 1"

		echo "---- Hosts ----"
		cat $PE_HOSTFILE
		echo "---- Limits ----"
		ulimit -a
		echo "---- Environment ----"
		env
		echo mpirun $ORTE_COMMON -np $NSLOTS $@
	fi
			
	exec mpirun $ORTE_COMMON -np $NSLOTS $@
}
